package com.crosspaste.ui.theme

import androidx.compose.material3.darkColorScheme
import androidx.compose.material3.lightColorScheme
import androidx.compose.ui.graphics.Color

object HoneyColor : ThemeColor {
    val primaryLight = Color(0xFF6D5E0F)
    val onPrimaryLight = Color(0xFFFFFFFF)
    val primaryContainerLight = Color(0xFFF8E287)
    val onPrimaryContainerLight = Color(0xFF221B00)
    val secondaryLight = Color(0xFF665E40)
    val onSecondaryLight = Color(0xFFFFFFFF)
    val secondaryContainerLight = Color(0xFFEEE2BC)
    val onSecondaryContainerLight = Color(0xFF211B04)
    val tertiaryLight = Color(0xFF43664E)
    val onTertiaryLight = Color(0xFFFFFFFF)
    val tertiaryContainerLight = Color(0xFFC5ECCE)
    val onTertiaryContainerLight = Color(0xFF00210F)
    val errorLight = Color(0xFFBA1A1A)
    val onErrorLight = Color(0xFFFFFFFF)
    val errorContainerLight = Color(0xFFFFDAD6)
    val onErrorContainerLight = Color(0xFF410002)
    val backgroundLight = Color(0xFFFFF9EE)
    val onBackgroundLight = Color(0xFF1E1B13)
    val surfaceLight = Color(0xFFFFF9EE)
    val onSurfaceLight = Color(0xFF1E1B13)
    val surfaceVariantLight = Color(0xFFEAE2D0)
    val onSurfaceVariantLight = Color(0xFF4B4739)
    val outlineLight = Color(0xFF7C7767)
    val outlineVariantLight = Color(0xFFCDC6B4)
    val scrimLight = Color(0xFF000000)
    val inverseSurfaceLight = Color(0xFF333027)
    val inverseOnSurfaceLight = Color(0xFFF7F0E2)
    val inversePrimaryLight = Color(0xFFDBC66E)
    val surfaceDimLight = Color(0xFFE0D9CC)
    val surfaceBrightLight = Color(0xFFFFF9EE)
    val surfaceContainerLowestLight = Color(0xFFFFFFFF)
    val surfaceContainerLowLight = Color(0xFFFAF3E5)
    val surfaceContainerLight = Color(0xFFF4EDDF)
    val surfaceContainerHighLight = Color(0xFFEEE8DA)
    val surfaceContainerHighestLight = Color(0xFFE8E2D4)

    val primaryLightMediumContrast = Color(0xFF4F4200)
    val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
    val primaryContainerLightMediumContrast = Color(0xFF857425)
    val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
    val secondaryLightMediumContrast = Color(0xFF4A4327)
    val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
    val secondaryContainerLightMediumContrast = Color(0xFF7D7455)
    val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
    val tertiaryLightMediumContrast = Color(0xFF284A34)
    val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
    val tertiaryContainerLightMediumContrast = Color(0xFF597D64)
    val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
    val errorLightMediumContrast = Color(0xFF8C0009)
    val onErrorLightMediumContrast = Color(0xFFFFFFFF)
    val errorContainerLightMediumContrast = Color(0xFFDA342E)
    val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
    val backgroundLightMediumContrast = Color(0xFFFFF9EE)
    val onBackgroundLightMediumContrast = Color(0xFF1E1B13)
    val surfaceLightMediumContrast = Color(0xFFFFF9EE)
    val onSurfaceLightMediumContrast = Color(0xFF1E1B13)
    val surfaceVariantLightMediumContrast = Color(0xFFEAE2D0)
    val onSurfaceVariantLightMediumContrast = Color(0xFF474335)
    val outlineLightMediumContrast = Color(0xFF645F50)
    val outlineVariantLightMediumContrast = Color(0xFF807A6B)
    val scrimLightMediumContrast = Color(0xFF000000)
    val inverseSurfaceLightMediumContrast = Color(0xFF333027)
    val inverseOnSurfaceLightMediumContrast = Color(0xFFF7F0E2)
    val inversePrimaryLightMediumContrast = Color(0xFFDBC66E)
    val surfaceDimLightMediumContrast = Color(0xFFE0D9CC)
    val surfaceBrightLightMediumContrast = Color(0xFFFFF9EE)
    val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
    val surfaceContainerLowLightMediumContrast = Color(0xFFFAF3E5)
    val surfaceContainerLightMediumContrast = Color(0xFFF4EDDF)
    val surfaceContainerHighLightMediumContrast = Color(0xFFEEE8DA)
    val surfaceContainerHighestLightMediumContrast = Color(0xFFE8E2D4)

    val primaryLightHighContrast = Color(0xFF292200)
    val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
    val primaryContainerLightHighContrast = Color(0xFF4F4200)
    val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
    val secondaryLightHighContrast = Color(0xFF282209)
    val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
    val secondaryContainerLightHighContrast = Color(0xFF4A4327)
    val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
    val tertiaryLightHighContrast = Color(0xFF042815)
    val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
    val tertiaryContainerLightHighContrast = Color(0xFF284A34)
    val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
    val errorLightHighContrast = Color(0xFF4E0002)
    val onErrorLightHighContrast = Color(0xFFFFFFFF)
    val errorContainerLightHighContrast = Color(0xFF8C0009)
    val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
    val backgroundLightHighContrast = Color(0xFFFFF9EE)
    val onBackgroundLightHighContrast = Color(0xFF1E1B13)
    val surfaceLightHighContrast = Color(0xFFFFF9EE)
    val onSurfaceLightHighContrast = Color(0xFF000000)
    val surfaceVariantLightHighContrast = Color(0xFFEAE2D0)
    val onSurfaceVariantLightHighContrast = Color(0xFF272418)
    val outlineLightHighContrast = Color(0xFF474335)
    val outlineVariantLightHighContrast = Color(0xFF474335)
    val scrimLightHighContrast = Color(0xFF000000)
    val inverseSurfaceLightHighContrast = Color(0xFF333027)
    val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
    val inversePrimaryLightHighContrast = Color(0xFFFFECA2)
    val surfaceDimLightHighContrast = Color(0xFFE0D9CC)
    val surfaceBrightLightHighContrast = Color(0xFFFFF9EE)
    val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
    val surfaceContainerLowLightHighContrast = Color(0xFFFAF3E5)
    val surfaceContainerLightHighContrast = Color(0xFFF4EDDF)
    val surfaceContainerHighLightHighContrast = Color(0xFFEEE8DA)
    val surfaceContainerHighestLightHighContrast = Color(0xFFE8E2D4)

    val primaryDark = Color(0xFFDBC66E)
    val onPrimaryDark = Color(0xFF3A3000)
    val primaryContainerDark = Color(0xFF534600)
    val onPrimaryContainerDark = Color(0xFFF8E287)
    val secondaryDark = Color(0xFFD1C6A1)
    val onSecondaryDark = Color(0xFF363016)
    val secondaryContainerDark = Color(0xFF4E472A)
    val onSecondaryContainerDark = Color(0xFFEEE2BC)
    val tertiaryDark = Color(0xFFA9D0B3)
    val onTertiaryDark = Color(0xFF143723)
    val tertiaryContainerDark = Color(0xFF2C4E38)
    val onTertiaryContainerDark = Color(0xFFC5ECCE)
    val errorDark = Color(0xFFFFB4AB)
    val onErrorDark = Color(0xFF690005)
    val errorContainerDark = Color(0xFF93000A)
    val onErrorContainerDark = Color(0xFFFFDAD6)
    val backgroundDark = Color(0xFF15130B)
    val onBackgroundDark = Color(0xFFE8E2D4)
    val surfaceDark = Color(0xFF15130B)
    val onSurfaceDark = Color(0xFFE8E2D4)
    val surfaceVariantDark = Color(0xFF4B4739)
    val onSurfaceVariantDark = Color(0xFFCDC6B4)
    val outlineDark = Color(0xFF969080)
    val outlineVariantDark = Color(0xFF4B4739)
    val scrimDark = Color(0xFF000000)
    val inverseSurfaceDark = Color(0xFFE8E2D4)
    val inverseOnSurfaceDark = Color(0xFF333027)
    val inversePrimaryDark = Color(0xFF6D5E0F)
    val surfaceDimDark = Color(0xFF15130B)
    val surfaceBrightDark = Color(0xFF3C3930)
    val surfaceContainerLowestDark = Color(0xFF100E07)
    val surfaceContainerLowDark = Color(0xFF1E1B13)
    val surfaceContainerDark = Color(0xFF222017)
    val surfaceContainerHighDark = Color(0xFF2D2A21)
    val surfaceContainerHighestDark = Color(0xFF38352B)

    val primaryDarkMediumContrast = Color(0xFFE0CA72)
    val onPrimaryDarkMediumContrast = Color(0xFF1C1600)
    val primaryContainerDarkMediumContrast = Color(0xFFA3903F)
    val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
    val secondaryDarkMediumContrast = Color(0xFFD6CAA5)
    val onSecondaryDarkMediumContrast = Color(0xFF1B1602)
    val secondaryContainerDarkMediumContrast = Color(0xFF9A916F)
    val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
    val tertiaryDarkMediumContrast = Color(0xFFADD4B7)
    val onTertiaryDarkMediumContrast = Color(0xFF001B0C)
    val tertiaryContainerDarkMediumContrast = Color(0xFF75997F)
    val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
    val errorDarkMediumContrast = Color(0xFFFFBAB1)
    val onErrorDarkMediumContrast = Color(0xFF370001)
    val errorContainerDarkMediumContrast = Color(0xFFFF5449)
    val onErrorContainerDarkMediumContrast = Color(0xFF000000)
    val backgroundDarkMediumContrast = Color(0xFF15130B)
    val onBackgroundDarkMediumContrast = Color(0xFFE8E2D4)
    val surfaceDarkMediumContrast = Color(0xFF15130B)
    val onSurfaceDarkMediumContrast = Color(0xFFFFFAF5)
    val surfaceVariantDarkMediumContrast = Color(0xFF4B4739)
    val onSurfaceVariantDarkMediumContrast = Color(0xFFD1CAB8)
    val outlineDarkMediumContrast = Color(0xFFA9A292)
    val outlineVariantDarkMediumContrast = Color(0xFF888373)
    val scrimDarkMediumContrast = Color(0xFF000000)
    val inverseSurfaceDarkMediumContrast = Color(0xFFE8E2D4)
    val inverseOnSurfaceDarkMediumContrast = Color(0xFF2D2A21)
    val inversePrimaryDarkMediumContrast = Color(0xFF554700)
    val surfaceDimDarkMediumContrast = Color(0xFF15130B)
    val surfaceBrightDarkMediumContrast = Color(0xFF3C3930)
    val surfaceContainerLowestDarkMediumContrast = Color(0xFF100E07)
    val surfaceContainerLowDarkMediumContrast = Color(0xFF1E1B13)
    val surfaceContainerDarkMediumContrast = Color(0xFF222017)
    val surfaceContainerHighDarkMediumContrast = Color(0xFF2D2A21)
    val surfaceContainerHighestDarkMediumContrast = Color(0xFF38352B)

    val primaryDarkHighContrast = Color(0xFFFFFAF5)
    val onPrimaryDarkHighContrast = Color(0xFF000000)
    val primaryContainerDarkHighContrast = Color(0xFFE0CA72)
    val onPrimaryContainerDarkHighContrast = Color(0xFF000000)
    val secondaryDarkHighContrast = Color(0xFFFFFAF5)
    val onSecondaryDarkHighContrast = Color(0xFF000000)
    val secondaryContainerDarkHighContrast = Color(0xFFD6CAA5)
    val onSecondaryContainerDarkHighContrast = Color(0xFF000000)
    val tertiaryDarkHighContrast = Color(0xFFEFFFF0)
    val onTertiaryDarkHighContrast = Color(0xFF000000)
    val tertiaryContainerDarkHighContrast = Color(0xFFADD4B7)
    val onTertiaryContainerDarkHighContrast = Color(0xFF000000)
    val errorDarkHighContrast = Color(0xFFFFF9F9)
    val onErrorDarkHighContrast = Color(0xFF000000)
    val errorContainerDarkHighContrast = Color(0xFFFFBAB1)
    val onErrorContainerDarkHighContrast = Color(0xFF000000)
    val backgroundDarkHighContrast = Color(0xFF15130B)
    val onBackgroundDarkHighContrast = Color(0xFFE8E2D4)
    val surfaceDarkHighContrast = Color(0xFF15130B)
    val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
    val surfaceVariantDarkHighContrast = Color(0xFF4B4739)
    val onSurfaceVariantDarkHighContrast = Color(0xFFFFFAF5)
    val outlineDarkHighContrast = Color(0xFFD1CAB8)
    val outlineVariantDarkHighContrast = Color(0xFFD1CAB8)
    val scrimDarkHighContrast = Color(0xFF000000)
    val inverseSurfaceDarkHighContrast = Color(0xFFE8E2D4)
    val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
    val inversePrimaryDarkHighContrast = Color(0xFF322A00)
    val surfaceDimDarkHighContrast = Color(0xFF15130B)
    val surfaceBrightDarkHighContrast = Color(0xFF3C3930)
    val surfaceContainerLowestDarkHighContrast = Color(0xFF100E07)
    val surfaceContainerLowDarkHighContrast = Color(0xFF1E1B13)
    val surfaceContainerDarkHighContrast = Color(0xFF222017)
    val surfaceContainerHighDarkHighContrast = Color(0xFF2D2A21)
    val surfaceContainerHighestDarkHighContrast = Color(0xFF38352B)

    override val name: String = "Honey"

    override val lightColorScheme =
        lightColorScheme(
            primary = primaryLight,
            onPrimary = onPrimaryLight,
            primaryContainer = primaryContainerLight,
            onPrimaryContainer = onPrimaryContainerLight,
            secondary = secondaryLight,
            onSecondary = onSecondaryLight,
            secondaryContainer = secondaryContainerLight,
            onSecondaryContainer = onSecondaryContainerLight,
            tertiary = tertiaryLight,
            onTertiary = onTertiaryLight,
            tertiaryContainer = tertiaryContainerLight,
            onTertiaryContainer = onTertiaryContainerLight,
            error = errorLight,
            onError = onErrorLight,
            errorContainer = errorContainerLight,
            onErrorContainer = onErrorContainerLight,
            background = backgroundLight,
            onBackground = onBackgroundLight,
            surface = surfaceLight,
            onSurface = onSurfaceLight,
            surfaceVariant = surfaceVariantLight,
            onSurfaceVariant = onSurfaceVariantLight,
            outline = outlineLight,
            outlineVariant = outlineVariantLight,
            scrim = scrimLight,
            inverseSurface = inverseSurfaceLight,
            inverseOnSurface = inverseOnSurfaceLight,
            inversePrimary = inversePrimaryLight,
            surfaceDim = surfaceDimLight,
            surfaceBright = surfaceBrightLight,
            surfaceContainerLowest = surfaceContainerLowestLight,
            surfaceContainerLow = surfaceContainerLowLight,
            surfaceContainer = surfaceContainerLight,
            surfaceContainerHigh = surfaceContainerHighLight,
            surfaceContainerHighest = surfaceContainerHighestLight,
        )

    override val darkColorScheme =
        darkColorScheme(
            primary = primaryDark,
            onPrimary = onPrimaryDark,
            primaryContainer = primaryContainerDark,
            onPrimaryContainer = onPrimaryContainerDark,
            secondary = secondaryDark,
            onSecondary = onSecondaryDark,
            secondaryContainer = secondaryContainerDark,
            onSecondaryContainer = onSecondaryContainerDark,
            tertiary = tertiaryDark,
            onTertiary = onTertiaryDark,
            tertiaryContainer = tertiaryContainerDark,
            onTertiaryContainer = onTertiaryContainerDark,
            error = errorDark,
            onError = onErrorDark,
            errorContainer = errorContainerDark,
            onErrorContainer = onErrorContainerDark,
            background = backgroundDark,
            onBackground = onBackgroundDark,
            surface = surfaceDark,
            onSurface = onSurfaceDark,
            surfaceVariant = surfaceVariantDark,
            onSurfaceVariant = onSurfaceVariantDark,
            outline = outlineDark,
            outlineVariant = outlineVariantDark,
            scrim = scrimDark,
            inverseSurface = inverseSurfaceDark,
            inverseOnSurface = inverseOnSurfaceDark,
            inversePrimary = inversePrimaryDark,
            surfaceDim = surfaceDimDark,
            surfaceBright = surfaceBrightDark,
            surfaceContainerLowest = surfaceContainerLowestDark,
            surfaceContainerLow = surfaceContainerLowDark,
            surfaceContainer = surfaceContainerDark,
            surfaceContainerHigh = surfaceContainerHighDark,
            surfaceContainerHighest = surfaceContainerHighestDark,
        )
}
