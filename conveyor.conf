include "#!./gradlew -q printConveyorConfig -PappEnv=PRODUCTION"

include file("extract-native-libraries.conf")

app {
  compression-level = high
  contact-email = "compile.future@gmail.com"
  license = "AGPL-3.0-or-later"
  rdns-name = "com.clipevery"
  site.base-url = "localhost:3000"
  updates = background
  url-schemes = [ clipevery ]
  vcs-url = "https://github.com/clipevery/clipevery-desktop"

  site {
    github {
      oauth-token = ${env.RELEASE_TOKEN}
    }
  }

  jvm {
    mac.amd64.inputs += "composeApp/jbr/jbrsdk_jcef-17.0.10-osx-x64-b1207.14.tar.gz"
    mac.aarch64.inputs += "composeApp/jbr/jbrsdk_jcef-17.0.10-osx-aarch64-b1207.14.tar.gz"
    windows.amd64.inputs += "composeApp/jbr/jbrsdk_jcef-17.0.10-windows-x64-b1207.14.tar.gz"
    linux.amd64.inputs += "composeApp/jbr/jbrsdk_jcef-17.0.10-linux-x64-b1207.14.tar.gz"
  }

  mac {
    amd64.inputs += artifacts/build-macos-amd64.tar
    aarch64.inputs += artifacts/build-macos-aarch64.tar

    bundle-extras += "composeApp/script/mac_start.sh" -> "bin/start.sh"

    icons = "icon/clipevery_mac_icon.png"

    info-plist.CFBundleIdentifier = "com.clipevery.mac"
    info-plist.LSMinimumSystemVersion = 12.7.0
    info-plist.LSUIElement = true
  }

  windows {
    windows.amd64.inputs += artifacts/windows

    inputs += "composeApp/script/win_start.bat" -> "bin/start.bat"

    icons = "icon/clipevery_win_icon.png"
  }

  linux {
    amd64.inputs += artifacts/build-linux-amd64.tar

    install-path = /usr/lib/clipevery

    icons = "icon/clipevery_win_icon.png"

    root-inputs += "composeApp/script/linux_start.sh" -> "/usr/lib/clipevery/bin/start.sh"
  }
}
conveyor.compatibility-level = 14
