[versions]
coil = "3.2.0"
compose = "1.8.1"
compose-material3 = "1.3.2"
compose-plugin = "1.8.0"
compose-shimmer = "1.3.2"
conveyor = "1.12"
cryptography = "0.4.0"
download = "5.6.0"
guava = "33.4.8-jre"
imageio = "3.12.0"
icu4j = "77.1"
jmdns = "3.6.1"
jna = "5.17.0"
jnativehook = "2.2.2"
jsoup = "1.20.1"
koin = "4.0.4"
kotlin = "2.1.21"
kotlin-logging = "7.0.7"
kotlinx-coroutines = "1.10.2"
kotlinx-datetime = "0.6.2"
kotlinx-serialization = "1.8.1"
ktlint = "12.2.0"
ktor = "3.1.3"
lifecycle = "2.9.0-beta01"
logback = "1.5.18"
mockk = "1.14.2"
okio = "3.11.0"
selenium = "4.23.1"
semver = "3.0.0"
sqldelight = "2.0.2"
system-tray = "4.4"
theme-detector = "3.8"
webp-imageio = "0.9.0"
yaml = "2.4"
zxing = "3.5.3"

[libraries]
coil-compose = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coil" }
coil-svg = { module = "io.coil-kt.coil3:coil-svg", version.ref = "coil" }
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }
compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "compose" }
compose-material3 = { module = "androidx.compose.material3:material3", version.ref = "compose-material3" }
compose-shimmer = { module = "com.valentinilk.shimmer:compose-shimmer", version.ref = "compose-shimmer" }
cryptography-core = { module = "dev.whyoleg.cryptography:cryptography-core", version.ref = "cryptography" }
cryptography-provider = { module = "dev.whyoleg.cryptography:cryptography-provider-jdk", version.ref = "cryptography" }
guava = { module = "com.google.guava:guava", version.ref = "guava" }
icu4j = { module = "com.ibm.icu:icu4j", version.ref = "icu4j" }
imageio-core = { module = "com.twelvemonkeys.imageio:imageio-core", version.ref = "imageio" }
imageio-jpeg = { module = "com.twelvemonkeys.imageio:imageio-jpeg", version.ref = "imageio" }
jmdns = { module = "org.jmdns:jmdns", version.ref = "jmdns" }
jna = { module = "net.java.dev.jna:jna", version.ref = "jna" }
jna-platform = { module = "net.java.dev.jna:jna-platform", version.ref = "jna" }
jnativehook = { module = "com.github.kwhat:jnativehook", version.ref = "jnativehook" }
jsoup = { module = "org.jsoup:jsoup", version.ref = "jsoup" }
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koin" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-viewmodel = { module = "io.insert-koin:koin-compose-viewmodel", version.ref = "koin" }
kotlin-logging = { module = "io.github.oshai:kotlin-logging", version.ref = "kotlin-logging" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-swing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "kotlinx-coroutines" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-server-compression = { module = "io.ktor:ktor-server-compression", version.ref = "ktor" }
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor" }
ktor-server-status-pages = { module = "io.ktor:ktor-server-status-pages", version.ref = "ktor" }
lifecycle-common = { module = "org.jetbrains.androidx.lifecycle:lifecycle-common", version.ref = "lifecycle" }
lifecycle-runtime = { module = "org.jetbrains.androidx.lifecycle:lifecycle-runtime", version.ref = "lifecycle" }
lifecycle-runtime-compose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-runtime-compose", version.ref = "lifecycle" }
lifecycle-viewmodel = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycle" }
lifecycle-viewmodel-compose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycle" }
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
material-desktop = { module = "org.jetbrains.compose.material:material-desktop", version.ref = "compose-plugin" }
okio = { module = "com.squareup.okio:okio", version.ref = "okio" }
selenium-chrome-driver = { module = "org.seleniumhq.selenium:selenium-chrome-driver", version.ref = "selenium" }
selenium-devtools = { module = "org.seleniumhq.selenium:selenium-devtools-v125", version.ref = "selenium" }
semver = { module = "io.github.z4kn4fein:semver", version.ref = "semver" }
sqlite-driver = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqldelight" }
sqldelight-coroutines-extensions = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqldelight" }
system-tray = { module = "com.dorkbox:SystemTray", version.ref = "system-tray" }
theme-detector = { module = "com.github.Dansoftowner:jSystemThemeDetector", version.ref = "theme-detector" }
webp-imageio = { module = "com.github.usefulness:webp-imageio", version.ref = "webp-imageio" }
yaml = { module = "org.yaml:snakeyaml", version.ref = "yaml" }
zxing-core = { module = "com.google.zxing:core", version.ref = "zxing" }
zxing-javase = { module = "com.google.zxing:javase", version.ref = "zxing" }

# test libs
koin-test = { module = "io.insert-koin:koin-test", version.ref = "koin" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinx-coroutines" }
io-mockk = { module = "io.mockk:mockk", version.ref = "mockk" }

[plugins]
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
conveyor = { id = "dev.hydraulic.conveyor", version.ref = "conveyor" }
download = { id = "de.undercouch.download", version.ref = "download" }
jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlint" }
sqlDelight = { id = "app.cash.sqldelight", version.ref = "sqldelight" }
