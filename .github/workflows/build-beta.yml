name: "Build Beta"

on:
  push:
    branches:
      - 'v-*-beta'
  pull_request:
    branches:
      - 'v-*-beta'

jobs:
  check-dylib-cache:
    runs-on: ubuntu-latest
    outputs:
      cache-hit: ${{ steps.cache-check.outputs.cache-hit }}
    steps:
      - uses: actions/checkout@v3

      - name: check-dylib-cache
        id: cache-check
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/composeApp/dylib
          key: mac-dylib-${{ hashFiles('**/*.swift*', '**/dylib-mini-sys.properties') }}

      - name: List dylib directory1
        run: ls -la ${{ github.workspace }}/composeApp/dylib

  build-macos:
    needs: check-dylib-cache
    runs-on: macos-latest
    if: needs.check-dylib-cache.outputs.cache-hit != 'true'
    strategy:
      matrix:
        arch:
          - x86_64-apple-macos10.15
          - arm64-apple-macos11
    steps:
      - uses: actions/checkout@v3

      - name: check-dylib-cache
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/composeApp/dylib
          key: mac-dylib-${{ hashFiles('**/*.swift*', '**/dylib-mini-sys.properties') }}

      - name: Set up Swift environment
        run: brew install swift

      - name: Build dylib
        working-directory: ${{ github.workspace }}
        run: |
          ARCH_DIR=${{ matrix.arch }}
          if [[ "$ARCH_DIR" == *"arm64"* ]]; then
            LIB_DIR="darwin-aarch64"
          else
            LIB_DIR="darwin-x86-64"
          fi
          mkdir -p ${{ github.workspace }}/composeApp/dylib/$LIB_DIR
          swiftc -emit-library composeApp/src/desktopMain/swift/MacosApi.swift -target ${{ matrix.arch }} -o ${{ github.workspace }}/composeApp/dylib/$LIB_DIR/libMacosApi.dylib
          echo "PREFIX=$LIB_DIR" >> $GITHUB_ENV

      - name: List dylib directory2
        run: ls -la ${{ github.workspace }}/composeApp/dylib

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ env.PREFIX }}-libMacosApi.dylib
          path: composeApp/dylib/${{ env.PREFIX }}/libMacosApi.dylib

  build-ubuntu:
    needs: [check-dylib-cache, build-macos]
    runs-on: ubuntu-latest
    if: always()
    env:
      BUILD_FULL_PLATFORM: YES
      BUILD_MAIN_PATH: ${{ github.workspace }}/composeApp/build/classes/kotlin/desktop/main
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          check-latest: true

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ./composeApp/resources
            ./composeApp/jbr
          key: >
            ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*',
            '**/gradle-wrapper.properties', '**/libs.versions.toml',
            '**/webDriver.properties', '**/jbr.yaml') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: check-dylib-cache
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/composeApp/dylib
          key: mac-dylib-${{ hashFiles('**/*.swift*', '**/dylib-mini-sys.properties') }}

      - name: List dylib directory3
        run: ls -la ${{ github.workspace }}/composeApp/dylib

#      - name: Build with Gradle
#        run: ./gradlew build

      - name: Check if specific file exists
        id: file_check
        run: |
          if [ -f "${{ github.workspace }}/composeApp/dylib/darwin-x86-64/libMacosApi.dylib" ]; then
            echo "::set-output name=x86-64-exists::true"
          else
            echo "::set-output name=x86-64-exists::false"
          fi
          
          if [ -f "${{ github.workspace }}/composeApp/dylib/darwin-aarch64/libMacosApi.dylib" ]; then
            echo "::set-output name=aarch64-exists::true"
          else
            echo "::set-output name=aarch64-exists::false"
          fi

      - name: Print result
        run: |
          if [ "${{ steps.file_check.outputs.x86-64-exists }}" == "true" ]; then
            echo "x86-64 File exists."
          else
            echo "x86-64 File does not exist."
          fi
          
          if [ "${{ steps.file_check.outputs.aarch64-exists }}" == "true" ]; then
            echo "aarch64 File exists."
          else
            echo "aarch64 File does not exist."
          fi 

#      - name: Download x86-64 macOS dylib
#        uses: actions/download-artifact@v3
#        with:
#          name: darwin-x86-64-libMacosApi.dylib
#          path: ${{ env.BUILD_MAIN_PATH }}/darwin-x86-64
#
#      - name: Download arm64 macOS dylib
#        uses: actions/download-artifact@v3
#        with:
#          name: darwin-aarch64-libMacosApi.dylib
#          path: ${{ env.BUILD_MAIN_PATH }}/darwin-aarch64
#
#      - name: Prepare Conveyor
#        run: |
#          echo "${{ secrets.DEVELOPER_ID_APPLICATION }}" | base64 --decode > developerID_application.p12
#
#      - name: Run Conveyor
#        uses: hydraulic-software/conveyor/actions/build@v14.2
#        env:
#          APPLE_ASP: ${{ secrets.APPLE_ASP }}
#          MAC_SIGNING_KEY_FILE_PATH: ${{ github.workspace }}/developerID_application.p12
#          RELEASE_TOKEN: ${{ secrets.RELEASE_TOKEN }}
#        with:
#          command: make site
#          extra_flags: -f ci.conveyor.conf
#          signing_key: ${{ secrets.SIGNING_KEY }}
#          agree_to_license: 1
#
#      - name: Cleanup Conveyor
#        if: always()
#        run: rm -f developerID_application.p12
#
#      - name: Get Timestamp
#        id: timestamp
#        run: echo "::set-output name=timestamp::$(date +%Y-%m-%d-%H-%M-%S)"
#
#      - uses: ryand56/r2-upload-action@latest
#        env:
#          max_old_space_size: 4096
#        with:
#          r2-account-id: ${{ secrets.R2_ACCOUNT_ID }}
#          r2-access-key-id: ${{ secrets.R2_ACCESS_KEY_ID }}
#          r2-secret-access-key: ${{ secrets.R2_SECRET_ACCESS_KEY }}
#          r2-bucket: ${{ secrets.R2_BUCKET }}
#          source-dir: output
#          destination-dir: desktop-${{ steps.timestamp.outputs.timestamp }}
#          output-file-url: 'true'
